{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "d38eed3b-9cb8-4c09-9138-87276dfede92",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "def calculate(list):\n",
    "    if len(list) != 9:\n",
    "        raise ValueError(\"List must contain nine numbers.\")\n",
    "    \n",
    "    list = np.array(list).reshape((3, 3))\n",
    "    \n",
    "    calculations = {}\n",
    "\n",
    "   \n",
    "    calculations['mean'] = [\n",
    "      list.mean(axis=0).tolist(),\n",
    "      list.mean(axis=1).tolist(),\n",
    "      list.mean().tolist()  \n",
    "    ]\n",
    "    \n",
    "    \n",
    "    calculations['variance'] = [\n",
    "        list.var(axis=0).tolist(),\n",
    "        list.var(axis=1).tolist(),\n",
    "        list.var().tolist()  \n",
    "    ]\n",
    "    \n",
    "   \n",
    "    calculations['standard deviation'] = [\n",
    "        list.std(axis=0).tolist(),\n",
    "        list.std(axis=1).tolist(),\n",
    "        list.std().tolist()  \n",
    "    ]\n",
    "    \n",
    "   \n",
    "    calculations['max'] = [\n",
    "        list.max(axis=0).tolist(),\n",
    "        list.max(axis=1).tolist(),\n",
    "        list.max().tolist()  \n",
    "    ]\n",
    "    \n",
    "    \n",
    "    calculations['min'] = [\n",
    "        list.min(axis=0).tolist(),\n",
    "        list.min(axis=1).tolist(),\n",
    "        list.min().tolist()  \n",
    "    ]\n",
    "    \n",
    "   \n",
    "    calculations['sum'] = [\n",
    "        list.sum(axis=0).tolist(),\n",
    "        list.sum(axis=1).tolist(),\n",
    "        list.sum().tolist()  \n",
    "    ]\n",
    "\n",
    "    return calculations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "61fb54c2-b8f6-4727-8669-f96c4a42f07b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'mean': [[4.0, 5.0, 6.0], [2.0, 5.0, 8.0], 5.0], 'variance': [[6.0, 6.0, 6.0], [0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 6.666666666666667], 'standard deviation': [[2.449489742783178, 2.449489742783178, 2.449489742783178], [0.816496580927726, 0.816496580927726, 0.816496580927726], 2.581988897471611], 'max': [[7, 8, 9], [3, 6, 9], 9], 'min': [[1, 2, 3], [1, 4, 7], 1], 'sum': [[12, 15, 18], [6, 15, 24], 45]}\n"
     ]
    }
   ],
   "source": [
    "print(calculate([1,2,3,4,5,6,7,8,9]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "507b03c0-38a7-41c1-a625-565be2d48594",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
